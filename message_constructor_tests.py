import unittest

from utils import MessageConstructor


class MessageConstructorTests(unittest.TestCase):
    # —Ç–∞–∫–æ–π –∂–µ —Ç–µ—Å—Ç –Ω–∞–ø–∏—Å–∞—Ç—å –¥–ª—è –≤—ã–≤–æ–¥–∞ –Ω–∞ –Ω–µ–¥–µ–ª—é –∏ –Ω–∞–ø–∏—Å–∞—Ç—å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ç–µ—Å—Ç (–ü—Ä–æ—Å—Ç–æ —á—Ç–æ –Ω–∏–±—É—å–¥ –∏—Å–ø—Ä–∞–≤—å –≤ expected)
    def test_get_output_message_for_day_given_data_then_correct(self):
        messageConstructor = MessageConstructor()
        data = {
            'temperatureApparentAvg': -7.88,
            'temperatureApparentMax': -2.89,
            'temperatureApparentMin': -13.58,
            'temperatureAvg': -1.52,
            'temperatureMax': 2.3,
            'temperatureMin': -5.98,
            'windGustAvg': 10.65,
            'windGustMax': 14.07,
            'windGustMin': 7.78,
            'windSpeedAvg': 7.06,
            'windSpeedMax': 9.21,
            'windSpeedMin': 5.31,
            'humidityAvg': 89.06,
            'humidityMax': 92.17,
            'humidityMin': 85.49,
            'weatherCodeMax': '–Ω–µ–±–æ–ª—å—à–æ–π —Å–Ω–µ–≥ üå®Ô∏è',
            'weatherCodeMin': '–Ω–µ–±–æ–ª—å—à–æ–π —Å–Ω–µ–≥ üå®Ô∏è',
            'location': '–ú–æ—Å–∫–≤–∞, –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω—ã–π –æ–∫—Ä—É–≥, –†–æ—Å—Å–∏—è'
        }
        message = " üìç –í—ã —Å–º–æ—Ç—Ä–∏—Ç–µ –ø–æ–≥–æ–¥—É –≤ –≥–æ—Ä–æ–¥–µ –ú–æ—Å–∫–≤–∞, –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω—ã–π –æ–∫—Ä—É–≥, –†–æ—Å—Å–∏—è\n\n" + " ‚ò∫ –í–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –Ω–∞ –∑–∞–≤—Ç—Ä–∞: \n" + " - –í —Ç–µ—á–µ–Ω–∏–µ –¥–Ω—è –±—É–¥–µ—Ç –Ω–µ–±–æ–ª—å—à–æ–π —Å–Ω–µ–≥ üå®Ô∏è\n" + " - üå°Ô∏è –°—Ä–µ–¥–Ω—è—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤–æ–∑–¥—É—Ö–∞ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç -1.52 ‚ÑÉ, –Ω–æ –æ—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ -7.88 ‚ÑÉ\n" + " - üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å –æ–∫–æ–ª–æ 89.06%\n" + " - üå¨Ô∏è –í–µ—Ç–µ—Ä –¥—É–µ—Ç —Å–æ —Å–∫–æ—Ä–æ—Å—Ç—å—é 7.06–º/—Å\n" + " - üí® –ê –ø–æ—Ä—ã–≤—ã –≤–µ—Ç—Ä–∞ –¥–æ—Å—Ç–∏–≥–∞—é—Ç 10.65 –º/—Å"
        self.assertEqual(messageConstructor.get_output_message_for_day(data, "–∑–∞–≤—Ç—Ä–∞"), message)
